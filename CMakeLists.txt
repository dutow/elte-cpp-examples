
CMAKE_MINIMUM_REQUIRED(VERSION 3.2)
PROJECT(elte-cpp-examples)

SET( VERSION_MAJOR   0   CACHE STRING "Project major version number." )
SET( VERSION_MINOR   1   CACHE STRING "Project minor version number." )
SET( VERSION_PATCH   0   CACHE STRING "Project patch version number." )
MARK_AS_ADVANCED( VERSION_MAJOR VERSION_MINOR VERSION_PATCH )

SET ( CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin )
SET ( CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib )

SET( CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/modules ${CMAKE_MODULE_PATH} )
INCLUDE( GroupInVisualStudio )
INCLUDE( BuildHelpers )
INCLUDE( CompilerFlags )

# boost
SET(Boost_USE_STATIC_LIBS ON)
SET(BOOST_INCLUDEDIR vendor/boost)
SET(BOOST_LIBRARYDIR vendor/boost/stage/lib)
FIND_PACKAGE(Boost 1.60.0 REQUIRED)
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})

# SFML
SET(SFML_ROOT vendor/SFML)
SET(SFML_STATIC_LIBRARIES TRUE)
SET( CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/vendor/SFML/cmake/Modules ${CMAKE_MODULE_PATH} )
INCLUDE( FindSFML )
FIND_PACKAGE( SFML REQUIRED COMPONENTS graphics window system )
INCLUDE_DIRECTORIES(${SFML_INCLUDE_DIR})

# common assets
INSTALL( DIRECTORY "assets/" DESTINATION "." )
FILE( COPY "assets/" DESTINATION "${CMAKE_BINARY_DIR}" )

# gtest, added as a subproject
ADD_SUBDIRECTORY( vendor/googletest )

ADD_SUBDIRECTORY(lesson-01)
ADD_SUBDIRECTORY(lesson-02)
ADD_SUBDIRECTORY(lesson-03)

SET(CPACK_GENERATOR "ZIP")
INCLUDE( CPack )

